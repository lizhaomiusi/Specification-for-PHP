#一致性

在本规范中，“必须”是被解释为一个实施或在一个程序的要求；相反，“不应该”被解释为一个禁止。
如果一个“必须”或“不一定”的要求，出现外部的约束被侵犯，行为是不确定的。在本规范中，“未定义行为”或不作为行为的任何外显式定义的遗漏，否则未定义行为。在这三个方面的重点是没有区别的，他们都描述了“行为是未定义的”。
“可能”这个词表示“许可”，而且永远不会被用来表示“可能”。
一个严格的规范程序必须只使用本规范中描述的语言的功能。特别是，它不能产生输出或表现出依赖于任何未指定的，未定义的，或执行定义的行为的行为。
符合标准的实施必须接受任何严格符合的项目。如果不改变任何严格符合程序的行为，一个符合标准的实现可能有扩展性。
符合标准的程序是可接受的。
一个符合标准的实现必须附有一个文档，它定义了所有实现定义的特性和所有扩展。
一些语法部分后面是一个约束部分，进一步限制了语法。发出的约束违反诊断，符合标准的执行可能会继续执行程序。在某些情况下，这样的延拓行为被记录在案（例如，当传递太少的参数时会发生什么）。做出这样的事情约束违反简单地强制发布一个诊断，它不要求程序执行终止。
本规范包含了一种叫做信息或非规范性文本的解释材料，严格地说，在正式语言规范中没有必要。所提供的例子来说明所描述的结构的可能形式。引用参照有关条款。笔记和笔记提供给实施者的执行者或程序员提供建议或指导。信息的附件提供额外的信息和总结在本规范中包含的信息。所有未标注为信息的文本都是规范的。
某些功能被标记为过时的。虽然这些都是规范本规范的现行版本，他们不保证在将来的修订中存在。通常，他们是旧的方法已被新的取代，并使用旧的方法是气馁。（这方面的例子包括大括号（{}）使用的订阅、老式的构造函数名称的使用）。
